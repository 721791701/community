<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bbgu.zmz.community.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.bbgu.zmz.community.model.User">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="account_id" jdbcType="BIGINT" property="accountId" />
    <result column="token" jdbcType="VARCHAR" property="token" />
    <result column="pwd" jdbcType="VARCHAR" property="pwd" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="sex" jdbcType="INTEGER" property="sex" />
    <result column="avatar_url" jdbcType="VARCHAR" property="avatarUrl" />
    <result column="bio" jdbcType="VARCHAR" property="bio" />
    <result column="kiss_num" jdbcType="BIGINT" property="kissNum" />
    <result column="user_create" jdbcType="BIGINT" property="userCreate" />
    <result column="user_modified" jdbcType="BIGINT" property="userModified" />
    <result column="role" jdbcType="VARCHAR" property="role" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="active_time" jdbcType="BIGINT" property="activeTime" />
    <result column="active_code" jdbcType="VARCHAR" property="activeCode" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, account_id, token, pwd, email, name, city, sex, avatar_url, bio, kiss_num, user_create, 
    user_modified, role, status, active_time, active_code
  </sql>
  <select id="selectByExample" parameterType="com.bbgu.zmz.community.model.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.bbgu.zmz.community.model.UserExample">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bbgu.zmz.community.model.User">
    insert into user (id, account_id, token, 
      pwd, email, name, city, 
      sex, avatar_url, bio, 
      kiss_num, user_create, user_modified, 
      role, status, active_time, 
      active_code)
    values (#{id,jdbcType=BIGINT}, #{accountId,jdbcType=BIGINT}, #{token,jdbcType=VARCHAR}, 
      #{pwd,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, 
      #{sex,jdbcType=INTEGER}, #{avatarUrl,jdbcType=VARCHAR}, #{bio,jdbcType=VARCHAR}, 
      #{kissNum,jdbcType=BIGINT}, #{userCreate,jdbcType=BIGINT}, #{userModified,jdbcType=BIGINT}, 
      #{role,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{activeTime,jdbcType=BIGINT}, 
      #{activeCode,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.bbgu.zmz.community.model.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="token != null">
        token,
      </if>
      <if test="pwd != null">
        pwd,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="avatarUrl != null">
        avatar_url,
      </if>
      <if test="bio != null">
        bio,
      </if>
      <if test="kissNum != null">
        kiss_num,
      </if>
      <if test="userCreate != null">
        user_create,
      </if>
      <if test="userModified != null">
        user_modified,
      </if>
      <if test="role != null">
        role,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="activeTime != null">
        active_time,
      </if>
      <if test="activeCode != null">
        active_code,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="token != null">
        #{token,jdbcType=VARCHAR},
      </if>
      <if test="pwd != null">
        #{pwd,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="avatarUrl != null">
        #{avatarUrl,jdbcType=VARCHAR},
      </if>
      <if test="bio != null">
        #{bio,jdbcType=VARCHAR},
      </if>
      <if test="kissNum != null">
        #{kissNum,jdbcType=BIGINT},
      </if>
      <if test="userCreate != null">
        #{userCreate,jdbcType=BIGINT},
      </if>
      <if test="userModified != null">
        #{userModified,jdbcType=BIGINT},
      </if>
      <if test="role != null">
        #{role,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="activeTime != null">
        #{activeTime,jdbcType=BIGINT},
      </if>
      <if test="activeCode != null">
        #{activeCode,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bbgu.zmz.community.model.UserExample" resultType="java.lang.Long">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=BIGINT},
      </if>
      <if test="record.token != null">
        token = #{record.token,jdbcType=VARCHAR},
      </if>
      <if test="record.pwd != null">
        pwd = #{record.pwd,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.city != null">
        city = #{record.city,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=INTEGER},
      </if>
      <if test="record.avatarUrl != null">
        avatar_url = #{record.avatarUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.bio != null">
        bio = #{record.bio,jdbcType=VARCHAR},
      </if>
      <if test="record.kissNum != null">
        kiss_num = #{record.kissNum,jdbcType=BIGINT},
      </if>
      <if test="record.userCreate != null">
        user_create = #{record.userCreate,jdbcType=BIGINT},
      </if>
      <if test="record.userModified != null">
        user_modified = #{record.userModified,jdbcType=BIGINT},
      </if>
      <if test="record.role != null">
        role = #{record.role,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.activeTime != null">
        active_time = #{record.activeTime,jdbcType=BIGINT},
      </if>
      <if test="record.activeCode != null">
        active_code = #{record.activeCode,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user
    set id = #{record.id,jdbcType=BIGINT},
      account_id = #{record.accountId,jdbcType=BIGINT},
      token = #{record.token,jdbcType=VARCHAR},
      pwd = #{record.pwd,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      city = #{record.city,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=INTEGER},
      avatar_url = #{record.avatarUrl,jdbcType=VARCHAR},
      bio = #{record.bio,jdbcType=VARCHAR},
      kiss_num = #{record.kissNum,jdbcType=BIGINT},
      user_create = #{record.userCreate,jdbcType=BIGINT},
      user_modified = #{record.userModified,jdbcType=BIGINT},
      role = #{record.role,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      active_time = #{record.activeTime,jdbcType=BIGINT},
      active_code = #{record.activeCode,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bbgu.zmz.community.model.User">
    update user
    <set>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="token != null">
        token = #{token,jdbcType=VARCHAR},
      </if>
      <if test="pwd != null">
        pwd = #{pwd,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="avatarUrl != null">
        avatar_url = #{avatarUrl,jdbcType=VARCHAR},
      </if>
      <if test="bio != null">
        bio = #{bio,jdbcType=VARCHAR},
      </if>
      <if test="kissNum != null">
        kiss_num = #{kissNum,jdbcType=BIGINT},
      </if>
      <if test="userCreate != null">
        user_create = #{userCreate,jdbcType=BIGINT},
      </if>
      <if test="userModified != null">
        user_modified = #{userModified,jdbcType=BIGINT},
      </if>
      <if test="role != null">
        role = #{role,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="activeTime != null">
        active_time = #{activeTime,jdbcType=BIGINT},
      </if>
      <if test="activeCode != null">
        active_code = #{activeCode,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bbgu.zmz.community.model.User">
    update user
    set account_id = #{accountId,jdbcType=BIGINT},
      token = #{token,jdbcType=VARCHAR},
      pwd = #{pwd,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      avatar_url = #{avatarUrl,jdbcType=VARCHAR},
      bio = #{bio,jdbcType=VARCHAR},
      kiss_num = #{kissNum,jdbcType=BIGINT},
      user_create = #{userCreate,jdbcType=BIGINT},
      user_modified = #{userModified,jdbcType=BIGINT},
      role = #{role,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      active_time = #{activeTime,jdbcType=BIGINT},
      active_code = #{activeCode,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="com.bbgu.zmz.community.model.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>